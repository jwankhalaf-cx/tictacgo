@page "/join"

@inject NavigationManager Navigation
<div class="flex flex-col justify-around h-4/5">
  <h1 class="font-['Pacifico'] text-5xl focus:outline-none text-center">
    <span class="text-[#d877aa]">Join</span> <span class="text-[#f59771]">Game</span>
  </h1>

  <div class="flex flex-col mb-4">
    <label class="font-['Quicksand'] text-slate-200 font-semibold" for="game-code">Enter game code</label>

    <input
      class="text-4xl text-amber-400 bg-slate-900 font-bold rounded py-2 px-6 tracking-widest uppercase focus:border-amber-500 focus:ring-amber-500 focus:shadow-none"
      type="text"
      id="game-code"
      maxlength="6"
      @oninput="e => HandleGameCodeInputChange(e.Value?.ToString())"/>
  </div>

  <div class="font-['Quicksand'] flex flex-col text-white align-center justify-between h-1/2">
    <button
      @onclick="@Join"
      class="w-full inline-block font-['Quicksand'] text-xl text-center text-slate-200 p-2 border border-white rounded-r-full rounded-l-full disabled:opacity-70 cursor-pointer"
      disabled="@_joinGameIsDisabled">
      Join Game
    </button>
  </div>
</div>

@code {
  private string? GameCode { get; set; } = string.Empty;
  private bool _joinGameIsDisabled = true;

  private void HandleGameCodeInputChange(string? gameCode)
  {
    if (string.IsNullOrEmpty(gameCode))
    {
      _joinGameIsDisabled = true;
    }
    else
    {
      GameCode = gameCode;
      _joinGameIsDisabled = false;
    }

    InvokeAsync(StateHasChanged);
  }

  private void Join()
  {
    if (!string.IsNullOrEmpty(GameCode))
    {
      Navigation.NavigateTo($"/game/{GameCode?.ToLower()}/join", new NavigationOptions
      {
        HistoryEntryState = "Navigation state"
      });
    }
  }

}