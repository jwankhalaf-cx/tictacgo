@page "/joingame"
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.SignalR.Client
<div class="font-['Quicksand'] flex flex-col text-white m-20 align-center justify-between h-1/2">
  <div class="flex flex-col">
    <label for="game-code">
      Enter game code
    </label>
    <input id="game-code" maxlength="6" type="text" @bind="GameCode" placeholder="X698L3" class="uppercase rounded-xl p-6 mt-4 text-3xl text-slate-800 text-center"/>
  </div>
  <div>
    <a @onclick="@Start" @onclick:preventDefault="true" class="w-full inline-block font-['Quicksand'] text-xl text-center text-slate-200 p-2 border border-white rounded-r-full rounded-l-full cursor-pointer">Join Game</a>
  </div>
</div>
<h3 class="text-3xl text-red-400 text-center">@GameNotFound</h3>

@code {
  private string GameCode { get; set; } = string.Empty;
  private HubConnection? _hubConnection;
  private string GameNotFound { get; set; } = string.Empty;

  protected override async Task OnInitializedAsync()
  {
    _hubConnection = new HubConnectionBuilder()
      .WithUrl(Navigation.ToAbsoluteUri("/gamehub/checkinggamecode"))
      .Build();
    _hubConnection.On<bool>("CheckGame", gameExist =>
    {
      if (gameExist)
      {
        Navigation.NavigateTo($"/game/{GameCode.ToLower()}", new NavigationOptions
        {
          HistoryEntryState = "Navigation state"
        });
      }
      else
      {
        GameNotFound = "Ops, wrong code";
      }
    });
    await _hubConnection.StartAsync();
  }

  private async Task Start()
  {
    if (_hubConnection is not null)
    {
      await _hubConnection.InvokeAsync("GameExist", GameCode.ToLower());
      await DisposeAsync();
    }

    async ValueTask DisposeAsync()
    {
      if (_hubConnection is not null)
      {
        await _hubConnection.DisposeAsync();
      }
    }
  }

}